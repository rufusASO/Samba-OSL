/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.rufus.sambagui;

import java.io.File;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import org.ini4j.Wini;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;

/**
 *
 * @author julio
 */
public class Interfaz extends javax.swing.JFrame {

    /**
     * Creates new form Interfaz
     */
    public Interfaz() {
        initComponents();
        
        JTableHeader header = tablaDatos.getTableHeader();
        header.setReorderingAllowed(false);
        for(int i = 0; i < tablaDatos.getColumnModel().getColumnCount(); i++){
            tablaDatos.getColumnModel().getColumn(i).setResizable(true);
        }   
        
        
        //Los paths
        directorioCopia = Paths.get("./smbCopia.conf");
        directorioCopia2 = Paths.get("./smbCopia2.conf");
        directorioSmb = Paths.get("/etc/samba/smb.conf");
        //Aquí se crea una copia de smb.conf. Por ahora es mi directorio /hom/daniel
        crearCopiaSMB(directorioSmb,directorioCopia);
        //Ahora se crean los Files
        smbCopia = new File("./smbCopia.conf");  
        //Creo mi clase Compartir que maneja todas las funciones de esta pestaña
        try{
        compartir = new Compartir(new Wini(smbCopia));
        }catch(IOException e){
            System.out.println("No se puede crar un WINI smb");
        }
        //Se llena la tabla de compartir
        compartir.leerSmb((DefaultTableModel) tablaDatos.getModel());
        
    }
    
    
    private void crearCopiaSMB(Path sourcePath, Path destinationPath){
        try {
            // Usa REPLACE_EXISTING para sobrescribir el archivo destino si ya existe
            Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);
        } catch (IOException e) {
            System.err.println("Error al copiar el archivo: " + e.getMessage());
        }
        
    }
    private void eliminarCopiaSmb(Path pathToDelete){
        try {
            // Elimina el archivo
            Files.delete(pathToDelete);
            System.out.println("Archivo eliminado exitosamente.");

        } catch (IOException e) {
            System.err.println("Error al eliminar el archivo: " + e.getMessage());
            // Manejar específicamente la situación cuando el archivo no existe
            if (Files.notExists(pathToDelete)) {
                System.err.println("El archivo no existe.");
            }
        }
    }
    private void guardarCopiaSmb(Path sourcePath, Path destinationPath){
        try {
            // Copiar el archivo desde la ruta de origen a la ruta de destino
            // Usa REPLACE_EXISTING para sobrescribir el archivo destino si ya existe
            Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);
            System.out.println("Archivo copiado exitosamente a: " + destinationPath);
            
            //Ahora borro el temporal
            Files.delete(sourcePath);
        } catch (IOException e) {
            System.err.println("Error al copiar el archivo: " + e.getMessage());
        }
    }
    
    public void removerDatosTabla(){
        DefaultTableModel modeloTabla = (DefaultTableModel) tablaDatos.getModel();
        int i = 0;
        int j = modeloTabla.getRowCount();
        while(i < j){
            modeloTabla.removeRow(0);
            i++;
        }
    }
    
    
    
    
    
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelPrincipal = new javax.swing.JPanel();
        Pestanias = new javax.swing.JTabbedPane();
        Inicio = new javax.swing.JPanel();
        titulo1 = new javax.swing.JLabel();
        estado = new javax.swing.JLabel();
        subtitulo1 = new javax.swing.JLabel();
        opciones1 = new javax.swing.JComboBox<>();
        subtitulo2 = new javax.swing.JLabel();
        opciones2 = new javax.swing.JComboBox<>();
        Compartir = new javax.swing.JPanel();
        tablaTitulos = new javax.swing.JScrollPane();
        tablaDatos = new javax.swing.JTable();
        addButton = new javax.swing.JButton();
        editButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        Trabajo = new javax.swing.JPanel();
        groupSetting = new javax.swing.JLayeredPane();
        titleGroup = new javax.swing.JLabel();
        groupName = new javax.swing.JTextField();
        serverSettings = new javax.swing.JLayeredPane();
        titleServer = new javax.swing.JLabel();
        onSettings = new javax.swing.JRadioButton();
        offSettings = new javax.swing.JRadioButton();
        Usuarios = new javax.swing.JPanel();
        saveButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(30, 30, 30));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        panelPrincipal.setBackground(new java.awt.Color(30, 30, 30));
        panelPrincipal.setPreferredSize(new java.awt.Dimension(900, 600));

        Pestanias.setBackground(new java.awt.Color(30, 30, 30));
        Pestanias.setForeground(new java.awt.Color(255, 255, 255));

        Inicio.setBackground(new java.awt.Color(45, 45, 45));

        titulo1.setBackground(new java.awt.Color(255, 255, 255));
        titulo1.setFont(new java.awt.Font("sansserif", 0, 20)); // NOI18N
        titulo1.setForeground(new java.awt.Color(255, 255, 255));
        titulo1.setText("Configuracion del servicio");

        estado.setBackground(new java.awt.Color(255, 255, 255));
        estado.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        estado.setForeground(new java.awt.Color(255, 255, 255));
        estado.setText("Estado actual: inactivo");

        subtitulo1.setBackground(new java.awt.Color(255, 255, 255));
        subtitulo1.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        subtitulo1.setForeground(new java.awt.Color(255, 255, 255));
        subtitulo1.setText("Despues de escribir la configuracion");

        opciones1.setBackground(new java.awt.Color(62, 62, 62));
        opciones1.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        opciones1.setForeground(new java.awt.Color(255, 255, 255));
        opciones1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Detener", "Reiniciar", "Recargar", "Mantener el estado actual" }));

        subtitulo2.setBackground(new java.awt.Color(255, 255, 255));
        subtitulo2.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        subtitulo2.setForeground(new java.awt.Color(255, 255, 255));
        subtitulo2.setText("Despues de reiniciar");

        opciones2.setBackground(new java.awt.Color(62, 62, 62));
        opciones2.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        opciones2.setForeground(new java.awt.Color(255, 255, 255));
        opciones2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Iniciar al arrancar", "No arrancar" }));

        javax.swing.GroupLayout InicioLayout = new javax.swing.GroupLayout(Inicio);
        Inicio.setLayout(InicioLayout);
        InicioLayout.setHorizontalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InicioLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(opciones2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subtitulo2)
                    .addComponent(opciones1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(subtitulo1)
                    .addComponent(estado)
                    .addComponent(titulo1))
                .addContainerGap(587, Short.MAX_VALUE))
        );
        InicioLayout.setVerticalGroup(
            InicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InicioLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(titulo1)
                .addGap(18, 18, 18)
                .addComponent(estado)
                .addGap(18, 18, 18)
                .addComponent(subtitulo1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opciones1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(subtitulo2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(opciones2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(187, Short.MAX_VALUE))
        );

        Pestanias.addTab("Inicio", Inicio);

        Compartir.setBackground(new java.awt.Color(45, 45, 45));

        tablaTitulos.setBackground(new java.awt.Color(62, 62, 62));
        tablaTitulos.setForeground(new java.awt.Color(255, 255, 255));

        tablaDatos.setBackground(new java.awt.Color(62, 62, 62));
        tablaDatos.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        tablaDatos.setForeground(new java.awt.Color(255, 255, 255));
        tablaDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Status", "Read-Only", "Name", "Path", "Guest Acces", "Comment"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablaDatos.setRowHeight(30);
        tablaTitulos.setViewportView(tablaDatos);

        addButton.setBackground(new java.awt.Color(62, 62, 62));
        addButton.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        addButton.setForeground(new java.awt.Color(255, 255, 255));
        addButton.setText("Añadir");
        addButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addButtonActionPerformed(evt);
            }
        });

        editButton.setBackground(new java.awt.Color(62, 62, 62));
        editButton.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        editButton.setForeground(new java.awt.Color(255, 255, 255));
        editButton.setText("Editar");
        editButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(62, 62, 62));
        deleteButton.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Borrar");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CompartirLayout = new javax.swing.GroupLayout(Compartir);
        Compartir.setLayout(CompartirLayout);
        CompartirLayout.setHorizontalGroup(
            CompartirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CompartirLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(tablaTitulos, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(CompartirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(editButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
        );
        CompartirLayout.setVerticalGroup(
            CompartirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CompartirLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(CompartirLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CompartirLayout.createSequentialGroup()
                        .addComponent(addButton)
                        .addGap(18, 18, 18)
                        .addComponent(editButton)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton))
                    .addComponent(tablaTitulos, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(155, Short.MAX_VALUE))
        );

        Pestanias.addTab("Compartir", Compartir);

        Trabajo.setBackground(new java.awt.Color(45, 45, 45));

        groupSetting.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));
        groupSetting.setPreferredSize(new java.awt.Dimension(300, 100));

        titleGroup.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        titleGroup.setForeground(new java.awt.Color(255, 255, 255));
        titleGroup.setText("Nombre del grupo de trabajo");

        groupName.setBackground(new java.awt.Color(45, 45, 45));
        groupName.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        groupName.setForeground(new java.awt.Color(255, 255, 255));
        groupName.setText("WORKGROUP");

        groupSetting.setLayer(titleGroup, javax.swing.JLayeredPane.DEFAULT_LAYER);
        groupSetting.setLayer(groupName, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout groupSettingLayout = new javax.swing.GroupLayout(groupSetting);
        groupSetting.setLayout(groupSettingLayout);
        groupSettingLayout.setHorizontalGroup(
            groupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(groupSettingLayout.createSequentialGroup()
                .addGroup(groupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(groupSettingLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(groupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(groupSettingLayout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(titleGroup)))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        groupSettingLayout.setVerticalGroup(
            groupSettingLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(groupSettingLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleGroup)
                .addGap(18, 18, 18)
                .addComponent(groupName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        serverSettings.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 1, true));

        titleServer.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        titleServer.setForeground(new java.awt.Color(255, 255, 255));
        titleServer.setText("WINS");

        onSettings.setBackground(new java.awt.Color(45, 45, 45));
        onSettings.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        onSettings.setForeground(new java.awt.Color(255, 255, 255));
        onSettings.setText("Compatibilidad con servidores WINS");

        offSettings.setBackground(new java.awt.Color(45, 45, 45));
        offSettings.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        offSettings.setForeground(new java.awt.Color(255, 255, 255));
        offSettings.setText("Servidor WINS remoto");

        serverSettings.setLayer(titleServer, javax.swing.JLayeredPane.DEFAULT_LAYER);
        serverSettings.setLayer(onSettings, javax.swing.JLayeredPane.DEFAULT_LAYER);
        serverSettings.setLayer(offSettings, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout serverSettingsLayout = new javax.swing.GroupLayout(serverSettings);
        serverSettings.setLayout(serverSettingsLayout);
        serverSettingsLayout.setHorizontalGroup(
            serverSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverSettingsLayout.createSequentialGroup()
                .addGroup(serverSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(serverSettingsLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(serverSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(offSettings)
                            .addComponent(onSettings)))
                    .addGroup(serverSettingsLayout.createSequentialGroup()
                        .addGap(152, 152, 152)
                        .addComponent(titleServer)))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        serverSettingsLayout.setVerticalGroup(
            serverSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(serverSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleServer)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(onSettings)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(offSettings)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout TrabajoLayout = new javax.swing.GroupLayout(Trabajo);
        Trabajo.setLayout(TrabajoLayout);
        TrabajoLayout.setHorizontalGroup(
            TrabajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrabajoLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(groupSetting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(113, 113, 113)
                .addComponent(serverSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        TrabajoLayout.setVerticalGroup(
            TrabajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrabajoLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addGroup(TrabajoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(serverSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(groupSetting, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(264, Short.MAX_VALUE))
        );

        Pestanias.addTab("Trabajo", Trabajo);

        Usuarios.setBackground(new java.awt.Color(45, 45, 45));

        javax.swing.GroupLayout UsuariosLayout = new javax.swing.GroupLayout(Usuarios);
        Usuarios.setLayout(UsuariosLayout);
        UsuariosLayout.setHorizontalGroup(
            UsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 894, Short.MAX_VALUE)
        );
        UsuariosLayout.setVerticalGroup(
            UsuariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 439, Short.MAX_VALUE)
        );

        Pestanias.addTab("Usuarios", Usuarios);

        saveButton.setBackground(new java.awt.Color(62, 62, 62));
        saveButton.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        saveButton.setForeground(new java.awt.Color(255, 255, 255));
        saveButton.setText("Guardar");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        cancelButton.setBackground(new java.awt.Color(62, 62, 62));
        cancelButton.setFont(new java.awt.Font("sansserif", 0, 16)); // NOI18N
        cancelButton.setForeground(new java.awt.Color(255, 255, 255));
        cancelButton.setText("Cancelar");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap(639, Short.MAX_VALUE)
                .addComponent(cancelButton)
                .addGap(40, 40, 40)
                .addComponent(saveButton)
                .addGap(31, 31, 31))
            .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelPrincipalLayout.createSequentialGroup()
                    .addComponent(Pestanias)
                    .addContainerGap()))
        );
        panelPrincipalLayout.setVerticalGroup(
            panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                .addContainerGap(525, Short.MAX_VALUE)
                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(saveButton))
                .addGap(50, 50, 50))
            .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(panelPrincipalLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(Pestanias, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(144, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelPrincipal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addButtonActionPerformed
       AnadirSeccion formulario = new AnadirSeccion(this, true);
       
       //Orden: ReadOnly, Nombre, Path, Guest Access , Comentario.
       String[] datos = formulario.getDatos();
       
       if(datos == null){
           System.out.println("Se dió el botón ATRÁS");
       }else if(datos[0] == null){
           System.out.println("Se CERRÓ LA VENTANA");
       }else{
           for(String dato : datos){
             System.out.println(dato);
           }
           compartir.addSeccion(datos, (DefaultTableModel) tablaDatos.getModel());
       }
    }//GEN-LAST:event_addButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        if(tablaDatos.getSelectedRow() == -1){
            System.out.println("Sin seleccionar");
        }else{
            //String para el formulario emergente.
            String[] opciones = {"Yes" , "No"};
            //Qué sección se selecciona
            String seccionABorrar = (String) tablaDatos.getValueAt(tablaDatos.getSelectedRow(), 2);
            System.out.println("A punto de eliminar la sección: " + seccionABorrar);
            //Se abre un cuadro de dialogo para confirmar el borrado
            int i = JOptionPane.showOptionDialog(this, "If you delete share " + seccionABorrar + ", all its settings will be lost.\nReally delete it?", "Eliminando Recurso", WIDTH, HEIGHT, null, opciones, opciones[0]);
            if(i == 1){ //SE SELECCIONÓ NO
                System.out.println("Se canceló el borrado");
            }else{
                compartir.deleteSeccion(tablaDatos.getSelectedRow(), tablaDatos, seccionABorrar);
            }
        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void editButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editButtonActionPerformed
        if(tablaDatos.getSelectedRow() == -1){
            System.out.println("Sin seleccionar");
        }else{
            compartir.editSeccion(tablaDatos.getSelectedRow(), tablaDatos);
            //Se crea una copia de la copiar. Lindo no?, sólo se me ocurrió eso porque es lo mismo que tener el frame principal cuando colocas cancelar o guardar cambios.Es como un sueño dentro de otro sueño.
            Path sourcePath = Paths.get("./smbCopia.conf");
            Path destinationPath = Paths.get(".","smbCopia2.conf");
            try {
                // Usa REPLACE_EXISTING para sobrescribir el archivo destino si ya existe
                Files.copy(sourcePath, destinationPath, StandardCopyOption.REPLACE_EXISTING);
            } catch (IOException e) {
                System.err.println("Error Al crear copia de la copiar : " + e.getMessage());
            }
            
            //Cambio el smb que modificará el compartir
            try{
            Wini smbTemporal = new Wini(new File("./smbCopia2.conf"));
            compartir.cambiarSmb(smbTemporal);
            }catch(IOException e){
                System.err.println("Error al cambiar al SMB TEMPORAL");
            }
            
            String seccionAEditar = (String) tablaDatos.getValueAt(tablaDatos.getSelectedRow(), 2); //Qué seccion edito
            EditarSeccion editarSeccion = new EditarSeccion(this, true); //creo el formulario
            editarSeccion.inicializar(compartir, seccionAEditar); //inicialización del formulario
            editarSeccion.setVisible(true);
            
            if(editarSeccion.taMadreEstoyCansado()){
                System.out.println("Se Confirmaron cambios, toca guardar la copia2");
                guardarCopiaSmb(directorioCopia2,directorioCopia);
                
            }else{
                System.out.println("Se descartaron cambios, toca eliminar la copia2 sin guardar");
                eliminarCopiaSmb(directorioCopia2);
            }
            
            //Vuelvo a cambiar el Smb que manejará el compartir al smb Copia 1
            try{
            Wini smbTemporal = new Wini(new File("./smbCopia.conf"));
            compartir.cambiarSmb(smbTemporal);
            //Vuelvo a llenar la tabla
            removerDatosTabla(); //Remuevo antiguas filas
            compartir.leerSmb((DefaultTableModel) tablaDatos.getModel()); //Vuelvo a llenar la tabla
            }catch(IOException e){
                System.err.println("Error al cambiar al SMB Copia");
            }
        }
        
        
        
        
    }//GEN-LAST:event_editButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        //DESCARTAMOS cambios solamente con borrar el archivo smbCopia y cerrar aplicación.
        // Definir la ruta del archivo a eliminar
        eliminarCopiaSmb(directorioCopia);
        compartir.reiniciarServicioSMB();
        System.exit(0);
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        //Esto confirma los cambios, por lo tanto se copia y reemplaza del smbCopia.conf al smb.conf original.
        guardarCopiaSmb(directorioCopia,directorioSmb);
        compartir.reiniciarServicioSMB();
        System.exit(0); //Ah si, dijo que no salieramos de la app. toca borrar esto y ver cómo volver
                        //a ejecutar la parte de hacer copia y crear un nuevo compartir que haga todo.
    }//GEN-LAST:event_saveButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interfaz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interfaz().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Compartir;
    private javax.swing.JPanel Inicio;
    private javax.swing.JTabbedPane Pestanias;
    private javax.swing.JPanel Trabajo;
    private javax.swing.JPanel Usuarios;
    private javax.swing.JButton addButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton editButton;
    private javax.swing.JLabel estado;
    private javax.swing.JTextField groupName;
    private javax.swing.JLayeredPane groupSetting;
    private javax.swing.JRadioButton offSettings;
    private javax.swing.JRadioButton onSettings;
    private javax.swing.JComboBox<String> opciones1;
    private javax.swing.JComboBox<String> opciones2;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JButton saveButton;
    private javax.swing.JLayeredPane serverSettings;
    private javax.swing.JLabel subtitulo1;
    private javax.swing.JLabel subtitulo2;
    private javax.swing.JTable tablaDatos;
    private javax.swing.JScrollPane tablaTitulos;
    private javax.swing.JLabel titleGroup;
    private javax.swing.JLabel titleServer;
    private javax.swing.JLabel titulo1;
    // End of variables declaration//GEN-END:variables
    
    //aqui va mi la instancia de mi clase que hará todo las funciones de mi respectiva pestaña (DANIEL)
    Compartir compartir;   
    File smbCopia;
    Path directorioCopia;
    Path directorioCopia2;
    Path directorioSmb;
}
